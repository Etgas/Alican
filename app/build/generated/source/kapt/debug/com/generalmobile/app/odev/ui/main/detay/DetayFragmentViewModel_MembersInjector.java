// Generated by Dagger (https://google.github.io/dagger).
package com.generalmobile.app.odev.ui.main.detay;

import com.generalmobile.app.odev.db.AppDatabase;
import com.generalmobile.app.odev.service.odevApi;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class DetayFragmentViewModel_MembersInjector
    implements MembersInjector<DetayFragmentViewModel> {
  private final Provider<odevApi> baseApiProvider;

  private final Provider<AppDatabase> dbProvider;

  public DetayFragmentViewModel_MembersInjector(
      Provider<odevApi> baseApiProvider, Provider<AppDatabase> dbProvider) {
    this.baseApiProvider = baseApiProvider;
    this.dbProvider = dbProvider;
  }

  public static MembersInjector<DetayFragmentViewModel> create(
      Provider<odevApi> baseApiProvider, Provider<AppDatabase> dbProvider) {
    return new DetayFragmentViewModel_MembersInjector(baseApiProvider, dbProvider);
  }

  @Override
  public void injectMembers(DetayFragmentViewModel instance) {
    injectBaseApi(instance, baseApiProvider.get());
    injectDb(instance, dbProvider.get());
  }

  public static void injectBaseApi(DetayFragmentViewModel instance, odevApi baseApi) {
    instance.baseApi = baseApi;
  }

  public static void injectDb(DetayFragmentViewModel instance, AppDatabase db) {
    instance.db = db;
  }
}
